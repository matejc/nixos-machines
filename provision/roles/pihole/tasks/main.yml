- name: Create pihole directory
  file:
    path: "/home/{{ ansible_user }}/pihole"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: directory
    mode: 0755

- name: Create 2nd pihole directory
  file:
    path: "/home/{{ ansible_user }}/pihole/pihole"
    state: directory
    mode: 0775

- name: Create FTL config
  blockinfile:
    path: "/home/{{ ansible_user }}/pihole/pihole/pihole-FTL.conf"
    create: true
    block: MAXDBDAYS={{ pihole_ftl_max_db_days }}
    mode: 0644

- name: Start/Update pihole container
  become: true
  docker_container:
    name: pihole
    image: "{{ pihole_image }}"
    pull: true
    restart_policy: always
    env:
      TZ: "{{ pihole_timezone }}"
      ServerIP: "{{ ansible_host }}"
      ServerIPv6: "{{ pihole_ipv6 }}"
      WEBPASSWORD: "{{ pihole_webpassword }}"
    dns_servers:
      - 127.0.0.1
      - "{{ pihole_static_dns }}"
    network_mode: host
    volumes:
      - "/home/{{ ansible_user }}/pihole/pihole/:/etc/pihole/"
      - "/home/{{ ansible_user }}/pihole/dnsmasq.d/:/etc/dnsmasq.d/"
    log_driver: json-file
    log_options:
      max-size: "10m"
      max-file: "5"
    container_default_behavior: compatibility

- name: Check pihole container
  uri:
    url: http://127.0.0.1
    status_code:
    - 200
    - 403
  register: result
  until: (result.status < 500) and (result.status > 0)
  retries: 15
  delay: 10

- name: Remove old image versions
  become: true
  docker_prune:
    images: true
    images_filters:
      dangling: false

- name: add static ip
  lineinfile:
    dest: /etc/dhcpcd.conf
    regexp: "^.*static ip_address=.*$"
    line: "static ip_address={{ ansible_host }}/24"
  become: true

- name: add static ipv6
  lineinfile:
    dest: /etc/dhcpcd.conf
    regexp: "^.*static ip6_address=.*$"
    line: "static ip6_address={{ pihole_ipv6 }}/64"
  become: true
