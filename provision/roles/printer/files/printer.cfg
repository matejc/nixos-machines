# This file contains common pin mappings for the 2018 Creality
# Ender 3. To use this config, the firmware should be compiled for the
# AVR atmega1284p.

# Note, a number of Melzi boards are shipped with a bootloader that
# requires the following command to flash the board:
#  avrdude -p atmega1284p -c arduino -b 57600 -P /dev/ttyUSB0 -U out/klipper.elf.hex
# If the above command does not work and "make flash" does not work
# then one may need to flash a bootloader to the board - see the
# Klipper docs/Bootloaders.md file for more information.

# See the example.cfg file for a description of available parameters.

[stepper_x]
step_pin: PD7
dir_pin: !PC5
enable_pin: !PD6
#step_distance: .0125
rotation_distance: 40
microsteps: 16
endstop_pin: ^PC2
position_endstop: 0
position_max: 235
homing_speed: 50

[stepper_y]
step_pin: PC6
dir_pin: !PC7
enable_pin: !PD6
#step_distance: .0125
rotation_distance: 40
microsteps: 16
endstop_pin: ^PC3
position_endstop: 0
position_max: 235
homing_speed: 50

[stepper_z]
step_pin: PB3
dir_pin: PB2
enable_pin: !PA5
#step_distance: .0025
rotation_distance: 8
microsteps: 16
endstop_pin: ^PC4
position_endstop: 0.0
position_max: 250

[extruder]
max_extrude_only_distance: 100
step_pin: PB1
dir_pin: !PB0
enable_pin: !PD6
#step_distance: 0.00241
rotation_distance: 7.55
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PD5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA7
control: pid
pid_Kp: 25.295
pid_Ki: 1.576
pid_Kd: 101.495
min_temp: 0
max_temp: 300

[heater_bed]
heater_pin: PD4
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA6
control: pid
pid_Kp: 60.885
pid_Ki: 0.701
pid_Kd: 1321.959
min_temp: 0
max_temp: 90

[fan]
pin: PB4

[mcu]
serial: /dev/printer_mcu_serial

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[display]
lcd_type: st7920
cs_pin: PA3
sclk_pin: PA1
sid_pin: PC1
encoder_pins: ^PD2, ^PD3
click_pin: ^!PC0

[pause_resume]

[display_status]

[virtual_sdcard]
path: /home/pi/gcode_files

######################################################################
# Start Print and End Print
######################################################################

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT and END_PRINT.

[gcode_macro START_PRINT]
variable_parameter_T_BED: 60
variable_parameter_T_EXTRUDER: 190
gcode:
    M117 Homing
    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.0
    # Home the printer
    G28
    # Use the bed mesh
    BED_MESH_PROFILE LOAD=cr10
    # Move the nozzle near the bed
    G1 X15 Y20 Z5 F6000

    M117 Waiting for temperature
    # Start bed heating and continue
    M140 S{T_BED}
    {% if printer.heater_bed.temperature < params.T_BED|float*0.85 %}
        M190 S{params.T_BED|float*0.85} # wait till 0.85 of bed temp is reached, then continue
    {% endif %}

    M140 S{T_BED}
    M109 S{T_EXTRUDER}
    M190 S{T_BED}

    # Prime line
    PRIME_LINE
    M117 Printing...

[gcode_macro END_PRINT]
gcode:
    M117 Done printing :)
    # move z up
    G91
    G1 E-3 Z+10 F3000
    # absolute xy
    G90
    G1 X10 Y220 F6000
    #disable hotend and heated bed
    M104 S0
    M140 S0
    # disable steppers
    M84
    BED_MESH_CLEAR

# prime the nozzle
[gcode_macro PRIME_LINE]
gcode:
    M117 Prime Line
    G92 E0 ;Reset Extruder
    # move z axis
    G1 Z2.0 F3000 ;Move Z Axis up
    # move to prime position
    G1 X20 Y30 Z0.28 F5000.0 ;Move to start position
    G1 X20 Y200.0 Z0.28 F1500.0 E15 ;Draw the first line
    G1 X22 Y200.0 Z0.28 F5000.0 ;Move to side a little
    G1 X22 Y50 Z0.28 F1500.0 E30 ;Draw the second line
    G92 E0 ;Reset Extruder
    G1 Z2.0 F3000 ;Move Z Axis up

[homing_override]
gcode:
    G28 X Y
    G28 Z
    G1 Z10 ; Move up 10mm

# G29 that does (1) home all (2) get bed mesh (3) move nozzle to corner so it doesnt ooze on the bed while heating up.
[gcode_macro G29]
gcode:
    G28
    BED_MESH_CALIBRATE
    G0 X0 Y0 Z10 F6000
    BED_MESH_PROFILE save=cr10

# Park toolhead
[gcode_macro M125]
gcode:
    SAVE_GCODE_STATE NAME=parking
    M117 Parking toolhead
    G91
    G1 Z20 F600 # move up 5 mm
    G90
    G1 X125 Y0 F4000 # move to park position
    RESTORE_GCODE_STATE NAME=parking

# LOW_TEMP_CHECK checks if there is a setpoint for the  extruder. Untested!
# - If this setpoint is reached, continue.
# - If not, heat to setpoint.
# - If no setpoint, heat to parameter T (default@200)
[gcode_macro LOW_TEMP_CHECK]
gcode:
    {% set t = params.T|default(230) %}
    {% if printer.extruder.target != 0 %} # if there is a setpoint for extruder
        {% if printer.extruder.temperature < printer.extruder.target %} # if not reached, heat
            M118 Heating from {printer.extruder.temperature} to {printer.extruder.target}.
            M109 S{printer.extruder.target|float}
        {% endif %}
    {% else %} # if no setpoint for extruder
        {% if printer.extruder.target < t %}  # heat to T.
            M118 No setpoint, heating to {t}.
            M109 S{t}
        {% endif %}
    {% endif %}

# load filament
[gcode_macro M701]
gcode:
    SAVE_GCODE_STATE NAME=loading_filament
    M117 Loading Filament
    M83
    G92 E0.0
    LOW_TEMP_CHECK
    G1 E100 F2000  # length of bowden tube till cold-end (~420mm)
    G1 E100 F200  # some extra to prime the nozzle --> slower
    G92 E0.0
    RESTORE_GCODE_STATE NAME=loading_filament

# unload filament
[gcode_macro M702]
gcode:
    SAVE_GCODE_STATE NAME=unloading_filament
    M125 # park
    M117 Unloading Filament
    LOW_TEMP_CHECK
    G91 # set relative
    G1 E10 F100
    G92 E0.0
    G1 E-100 F2000 # the E is the length of the bowden tube (420mm) + 100 mm.
    G92 E0.0
    RESTORE_GCODE_STATE NAME=unloading_filament

# filament change
[gcode_macro M600]
gcode:
    M117 Filament Change
    M118 Filament Change
    SAVE_GCODE_STATE NAME=filament_change
    PAUSE
    LOW_TEMP_CHECK
    G91 # relative
    G1 E-1 F300 # retract 1
    M125 # park
    M702 # unload

    M117 New filament
    M118 New filament
    COUNTDOWN TIME=25 MSG="Switch"
    M701
    COUNTDOWN TIME=10 MSG="Clean"
    RESUME
    M117 Resuming
    M118 Resuming
    RESTORE_GCODE_STATE NAME=filament_change
    M117 Printing..
    M118 Printing..

[gcode_macro COUNTDOWN]
gcode:
    {% set msg = params.MSG|default("Time: ") %}      #edit to your park position
    {% set time = params.TIME|default(10) %}      #edit to your park position
    # countdown
    {% for s in range(time|int, 0, -1) %}
        # dwell 1 second
        G4 P1000
        # echo
        M117 {params.msg} {s}s
        M118 {params.msg} {s}s
    {% endfor %}

[gcode_macro CANCEL]
gcode:
    M104 S0 # turn off temperature
    M140 S0 # Turn off hbp
    G91
    G1 Z10 F600 # move up
    G90
    G28 X100 Y200 # Home X and Y axis
    M84 # disable motors

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(230) %}      #edit to your park position
    {% set y = params.Y|default(230) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE


#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 25.913
#*# pid_ki = 1.404
#*# pid_kd = 119.524
